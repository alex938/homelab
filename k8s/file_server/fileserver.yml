apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    worker_processes 5;
    events {
        worker_connections 1024;
    }
    http {
      log_format main '$remote_addr - $http_x_forwarded_for - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" "$http_user_agent"';


      access_log /usr/share/nginx/logs/access-$HOSTNAME.log main;

      server {
          listen 80; #proxy_protocol;
          server_name software.labjunkie.org;

          location / {
              root /usr/share/nginx/html;
              autoindex on;
              autoindex_exact_size off;
              autoindex_localtime on;
          }
      }
    }
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: software-volume
  labels:
    type: shared
spec:
  storageClassName: ""
  capacity:
    storage: 5Mi
  accessModes:
    - ReadWriteMany
  nfs:
    path: /volume1/share1/software
    server: nas.batcave.local
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: software-pvc
spec:
  storageClassName: ""
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Mi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: logs-volume
  labels:
    type: shared
spec:
  storageClassName: ""
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  nfs:
    path: /volume1/share1/logs/fileserver
    server: nas.batcave.local
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logs-pvc
spec:
  storageClassName: ""
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fileserver-nginx-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fileserver
  template:
    metadata:
      labels:
        app: fileserver
    spec:
      containers:
        - name: fileserver
          image: nginx:1.26.2
          ports:
            - containerPort: 80
          env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          volumeMounts:
            - name: software-volume
              mountPath: /usr/share/nginx/html
            - name: logs-volume
              mountPath: /usr/share/nginx/logs
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: software-volume
          persistentVolumeClaim:
            claimName: software-pvc
        - name: logs-volume
          persistentVolumeClaim:
            claimName: logs-pvc
        - name: nginx-config-volume
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: fileserver-nginx-service
spec:
  type: ClusterIP  # ingress will handle external exposure
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: fileserver
