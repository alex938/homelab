id: update_srvs
namespace: update_srvs

inputs:
  - id: avatar
    type: STRING
    defaults: https://avatars.githubusercontent.com/u/37157369
  #- id: inventory
  #  type: FILE

tasks:
  - id: setup
    type: io.kestra.core.tasks.flows.WorkingDirectory
    tasks:
      #- id: write_inventory
      #  type: io.kestra.core.tasks.storages.LocalFiles
      #  inputs:
      #    inventory.ini: "{{ inputs.inventory }}"

      - id: git_clone
        type: io.kestra.plugin.git.Clone
        url: https://github.com/alex938/homelab
        branch: main

      - id: local_files
        type: io.kestra.core.tasks.storages.LocalFiles
        inputs:
          myplaybook.yml: |
            ---
            - hosts: all
              become: true
              tasks:
                - name: Updating Svrs
                  debug:
                    msg: "Updating Svr"
                - name: Upgrade/update packages
                  apt:
                    upgrade: full
                    update_cache: yes
                    force_apt_get: yes
                  register: update_result
                - name: Autoremove unused packages
                  apt:
                    autoremove: yes
                - name: Autoclean apt cache
                  command: apt-get autoclean
          id_rsa: "{{ secret('SSH_KEY') }}"

      - id: ansible_task
        type: io.kestra.plugin.ansible.cli.AnsibleCLI
        docker:
          image: cytopia/ansible:latest-tools
          pullPolicy: IF_NOT_PRESENT
          user: "1000"
        commands:
          - ansible-playbook -i inventory/inventroy.ini --key-file id_rsa myplaybook.yml
        env:
          #DEBIAN_FRONTEND: "noninteractive"
          ANSIBLE_HOST_KEY_CHECKING: "False"
          ANSIBLE_REMOTE_USER: "{{ secret('SYSTEM_USERNAME') }}"

      - id: send_notification
        type: io.kestra.plugin.notifications.discord.DiscordExecution
        url: "{{ secret('DISCORD_WEBHOOK') }}"
        avatarUrl: "{{ inputs.avatar }}"
        username: "{{ secret('DISCORD_USERNAME') }}"
        content: >
          Server update task on ran at: {{ execution.startDate }}
        
triggers:
  - id: every_1_days
    type: io.kestra.core.models.triggers.types.Schedule
    cron: "0 0 */1 * *"
