---
- name: Setup initial user
  hosts: servers
  become: true
  gather_facts: true
  vars_files:
    - vault.yml

  tasks:
    - name: Ping the host
      ansible.builtin.ping:
      register: ping_result
      ignore_unreachable: true
      ignore_errors: true

    - name: Ensure .ssh directory exists for initial user
      ansible.builtin.file:
        path: /home/{{ ansible_user }}/.ssh
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0700'
      when: ping_result is succeeded

    - name: Copy the public key to the initial user's authorized_keys
      copy:
        src: "{{ initial_pub }}"
        dest: "/home/{{ ansible_user }}/.ssh/authorized_keys"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'
      notify: notify_copy_initial_pub
      when: ping_result is succeeded

    - name: Disable password authentication for SSH
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication no'
        state: present
      notify: notify_disable_password_auth
      when: ping_result is succeeded

    - name: Reload SSH service to apply changes
      service:
        name: sshd
        state: reloaded
      notify: notify_reload_sshd
      when: ping_result is succeeded

  handlers:
    - name: notify_copy_initial_pub
      debug:
        msg: "Initial user public key copied to {{ hostvars[inventory_hostname]['ansible_hostname'] }}"

    - name: notify_disable_password_auth
      debug:
        msg: "Password authentication disabled for initial user on {{ hostvars[inventory_hostname]['ansible_hostname'] }}"

    - name: notify_reload_sshd
      debug:
        msg: "SSHD service reloaded on {{ hostvars[inventory_hostname]['ansible_hostname'] }}"

- name: Setup ansible user on servers
  hosts: servers
  become: true
  gather_facts: true
  vars_files:
    - vault.yml

  tasks:
    - name: Ping the host
      ansible.builtin.ping:
      register: ping_result
      ignore_unreachable: true
      ignore_errors: true

    - name: Check if ansible user exists
      getent:
        database: passwd
        key: ansible
      register: ansible_user_exists
      ignore_errors: true
      when: ping_result is succeeded

    - name: Create ansible user if not present
      user:
        name: ansible
        comment: "Ansible User"
        shell: /bin/bash
        create_home: true
        state: present
      when: ansible_user_exists is failed and ping_result is succeeded
      notify: notify_ansible_user_created

    - name: Create .ssh directory for ansible user
      file:
        path: /home/ansible/.ssh
        state: directory
        owner: ansible
        group: ansible
        mode: '0700'
      notify: notify_created_ssh_dir
      when: ping_result is succeeded

    - name: Copy the existing public key to the managed nodes
      copy:
        src: "{{ ansible_pub }}"
        dest: /home/ansible/.ssh/authorized_keys
        owner: ansible
        group: ansible
        mode: '0600'
      notify: notify_copy_ansible_pub
      when: ping_result is succeeded

    - name: Ensure ansible user can use sudo without password
      lineinfile:
        path: /etc/sudoers.d/ansible
        state: present
        create: true
        line: 'ansible ALL=(ALL) NOPASSWD: ALL'
        mode: '0440'
      notify: notify_sudoers
      when: ping_result is succeeded

  handlers:
    - name: notify_ansible_user_created
      debug:
        msg: "Ansible user created on {{ hostvars[inventory_hostname]['ansible_hostname'] }}"

    - name: notify_created_ssh_dir
      debug:
        msg: "Created ansible SSH dir on {{ hostvars[inventory_hostname]['ansible_hostname'] }}"

    - name: notify_copy_ansible_pub
      debug:
        msg: "Copied ansible public key to {{ hostvars[inventory_hostname]['ansible_hostname'] }}"

    - name: notify_sudoers
      debug:
        msg: "Ansible user added to sudoers on {{ hostvars[inventory_hostname]['ansible_hostname'] }}"
