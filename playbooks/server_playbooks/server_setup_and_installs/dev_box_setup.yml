---
- name: Base setup of new server
  hosts: homelab:k8s
  become: true
  vars_files:
    - vault2.yml
  vars:
    motd_debian: "*** labjunkie.org - no unauthorised access ***\n"

  tasks:
    - name: Ping the host
      ansible.builtin.ping:
      register: ping_result
      ignore_unreachable: true
      ignore_errors: true

    - name: Display debug info for host
      debug:
        msg: "Host {{ inventory_hostname }} is running {{ ansible_distribution }}"
      when: ping_result is not failed

    - name: set ssh motd
      copy:
        content: "{{ motd_debian }}"
        dest: /etc/motd
        mode: '0644'
      when: ping_result is not failed
      notify: MOTD changed

    - name: update and upgrade packages on debian or ubuntu
      apt:
        upgrade: safe 
        update_cache: yes
        force_apt_get: yes
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
      notify: Updated Server

    - name: update and upgrade packages centos
      yum:
        name: "*"
        state: latest
        update_cache: yes
      when: ansible_distribution == "CentOS"
      notify: Updated Server

    - name: check if docker is installed
      command: which docker
      register: docker_installed
      ignore_errors: true
      when: ping_result is not failed
      notify: Docker Already Installed

    #- name: download docker install script
      #ansible.builtin.get_url:
      #  url: https://raw.githubusercontent.com/docker/docker-install/master/install.sh
      #  dest: /tmp/getdocker.sh
      #  validate_certs: no
      #  mode: '0744'
      #when: docker_installed.rc != 0 and ping_result is not failed
      #notify: Docker Script Downloaded

    - name: Update resolv.conf with DNS servers
      copy:
        dest: /etc/resolv.conf
        content: |
          nameserver 192.168.2.12
          nameserver 172.20.1.2

    - name: Ensure curl is installed
      ansible.builtin.package:
        name: curl
        state: present

    - name: Download Docker installation script using curl
      ansible.builtin.command:
        cmd: curl -fsSL https://raw.githubusercontent.com/docker/docker-install/master/install.sh -o /tmp/getdocker.sh
      when: docker_installed.rc != 0 and ping_result is not failed
      notify: Docker Script Downloaded

    - name: install docker
      shell: yes | sh /tmp/getdocker.sh
      when: docker_installed.rc != 0 and ping_result is not failed
      notify: Docker Installed

    - name: check if docker installation script exists
      stat:
        path: /tmp/getdocker.sh
      register: docker_script
      when: ping_result is not failed

    - name: cleanup docker installation script
      ansible.builtin.file:
        path: /tmp/getdocker.sh
        state: absent
      when: docker_script.stat.exists and ping_result is not failed
      notify: Docker Script Removed

    - name: install xrdp package
      apt:
        name: xrdp
        state: present
      notify: XRDP Installed

    - name: enable XRDP service on startup
      systemd:
        name: xrdp
        enabled: yes
        state: started
      notify: XRDP Enabled on Startup

    - name: enabled session manager service on startup
      systemd:
        name: xrdp-sesman
        enabled: yes
        state: started
      notify: Sesman Enabled on Startup

    - name: install sshpass package
      apt:
        name: sshpass
        state: present
      notify: sshpass installed

    - name: Ensure EPEL repository is enabled on CentOS
      yum:
        name: epel-release
        state: present
      when: ansible_distribution == "CentOS"

    - name: Install Ansible on Debian or Ubuntu
      apt:
        name: ansible
        state: present
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
      notify: Ansible Installed

    - name: Install Ansible on CentOS
      yum:
        name: ansible
        state: present
      when: ansible_distribution == "CentOS"
      notify: Ansible Installed

    - name: Check if Terraform is installed
      command: terraform -version
      register: terraform_installed
      ignore_errors: true

    - name: Ensure unzip is installed
      apt:
        name: unzip
        state: present
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

    - name: Ensure unzip is installed on CentOS
      yum:
        name: unzip
        state: present
      when: ansible_distribution == "CentOS"

    - name: Download Terraform binary if not installed
      ansible.builtin.get_url:
        url: "https://releases.hashicorp.com/terraform/1.9.8/terraform_1.9.8_linux_amd64.zip"
        dest: /tmp/terraform.zip
      when: terraform_installed.rc != 0

    - name: Unzip Terraform binary
      ansible.builtin.unarchive:
        src: /tmp/terraform.zip
        dest: /usr/local/bin/
        remote_src: yes
      notify: Terraform Installed
      when: terraform_installed.rc != 0

    - name: Ensure Terraform binary is executable
      file:
        path: /usr/local/bin/terraform
        mode: '0755'
      when: terraform_installed.rc != 0

    - name: Cleanup Terraform zip file
      ansible.builtin.file:
        path: /tmp/terraform.zip
        state: absent

  handlers:
    - name: MOTD changed
      debug:
        msg: The MOTD was changed on {{ inventory_hostname }}

    - name: Updated Server
      debug:
        msg: Packages were updated

    - name: Docker Script Downloaded
      debug:
        msg: Docker script downloaded
        
    - name: Docker Installed
      debug:
        msg: Docker installed

    - name: Docker Script Removed
      debug:
        msg: Docker installation script removed

    - name: Docker Already Installed
      debug:
        msg: Docker already installed

    - name: XRDP Installed
      debug:
        msg: XRDP Installed

    - name: XRDP Enabled on Startup
      debug:
        msg: XRDP Enabled on Startup

    - name: Sesman Enabled on Startup
      debug:
        msg: Sesman Enabled on Startup

    - name: sshpass installed
      debug:
        msg: sshpass installed

    - name: Ansible Installed
      debug:
        msg: Ansible Installed

    - name: Terraform Installed
      debug:
        msg: Terraform Installed

    - name: Terraform Version Checked
      debug:
        msg: "Terraform version: {{ terraform_version_result.stdout }}"